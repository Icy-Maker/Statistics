import pandas as pd
from sklearn.preprocessing import StandardScaler
from scipy.cluster.hierarchy import linkage, dendrogram
import matplotlib.pyplot as plt

# 数据输入
data = [
    ['阿根廷', 10.39, 20.81, 46.84, 1.81, 3.70, 14.04, 29.36, 137.72],
    ['澳大利亚', 10.31, 20.06, 44.84, 1.74, 3.57, 13.28, 27.66, 128.30],
    ['奥地利', 10.44, 20.81, 46.82, 1.79, 3.60, 13.26, 27.72, 135.90],
    ['比利时', 10.34, 20.68, 45.04, 1.73, 3.60, 13.22, 27.45, 129.95],
    ['百慕大', 10.28, 20.58, 45.91, 1.80, 3.75, 14.68, 30.55, 146.62],
    ['巴西', 10.22, 20.43, 45.21, 1.73, 3.66, 13.62, 28.62, 133.13],
    ['缅甸', 10.64, 21.52, 48.30, 1.80, 3.85, 14.45, 30.28, 139.95],
    ['加拿大', 10.17, 20.22, 45.68, 1.76, 3.63, 13.55, 28.09, 130.15],
    ['智利', 10.34, 20.80, 46.20, 1.79, 3.71, 13.61, 29.30, 134.03],
    ['中国', 10.51, 21.04, 47.30, 1.81, 3.73, 13.90, 29.13, 133.53],
    ['哥伦比亚', 10.43, 21.05, 46.10, 1.82, 3.74, 13.49, 27.88, 131.35],
    ['库克群岛', 12.18, 23.20, 52.94, 2.02, 4.24, 16.70, 35.38, 164.70],
    ['哥斯达黎加', 10.94, 21.90, 48.66, 1.87, 3.84, 14.03, 28.81, 136.58],
    ['捷克斯洛伐克', 10.35, 20.65, 45.64, 1.76, 3.58, 13.42, 28.19, 134.32],
    ['丹麦', 10.56, 20.52, 45.89, 1.78, 3.61, 13.50, 28.11, 130.78],
    ['多米尼加共和国', 10.14, 20.65, 46.80, 1.82, 3.82, 14.91, 31.45, 154.12],
    ['芬兰', 10.43, 20.69, 45.49, 1.74, 3.61, 13.27, 27.52, 130.87],
    ['法国', 10.11, 20.38, 45.28, 1.73, 3.57, 13.34, 27.97, 132.30],
    ['德意志民主共和国', 10.12, 20.33, 44.87, 1.73, 3.56, 13.17, 27.42, 129.92],
    ['德意志联邦共和国', 10.16, 20.37, 44.50, 1.73, 3.53, 13.21, 27.61, 132.23],
    ['大不列颠及北爱尔兰', 10.11, 20.21, 44.93, 1.70, 3.51, 13.01, 27.51, 129.13],
    ['希腊', 10.22, 20.71, 46.56, 1.78, 3.64, 14.59, 28.45, 134.60],
    ['危地马拉', 10.98, 21.82, 48.40, 1.89, 3.80, 14.16, 30.11, 139.33],
    ['匈牙利', 10.26, 20.62, 46.02, 1.77, 3.62, 13.49, 28.44, 132.58],
    ['印度', 10.60, 21.42, 45.73, 1.76, 3.73, 13.77, 28.81, 131.98],
    ['印度尼西亚', 10.59, 21.49, 47.80, 1.84, 3.92, 14.73, 30.79, 148.83],
    ['以色列', 10.61, 20.96, 46.30, 1.79, 3.56, 13.32, 27.81, 132.35],
    ['爱尔兰', 10.71, 21.00, 47.80, 1.77, 3.72, 13.66, 28.93, 137.55],
    ['意大利', 10.01, 19.72, 45.26, 1.73, 3.60, 13.23, 27.52, 131.08],
    ['日本', 10.34, 20.81, 45.86, 1.79, 3.64, 13.41, 27.72, 128.63],
    ['肯尼亚', 10.46, 20.66, 44.92, 1.73, 3.55, 13.10, 27.38, 129.75],
    ['韩国', 10.34, 20.89, 46.90, 1.79, 3.77, 13.96, 29.23, 136.25],
    ['朝鲜人民民主共和国', 10.91, 21.94, 47.30, 1.85, 3.77, 14.13, 29.67, 130.87],
    ['卢森堡', 10.35, 20.77, 47.40, 1.82, 3.67, 13.64, 29.08, 141.27],
    ['马来西亚', 10.40, 20.92, 46.30, 1.82, 3.80, 14.64, 31.01, 154.10],
    ['毛里求斯', 11.19, 22.45, 47.70, 1.88, 3.83, 15.06, 31.77, 152.23],
    ['墨西哥', 10.42, 21.30, 46.10, 1.80, 3.65, 13.46, 27.95, 129.20],
    ['荷兰', 10.52, 20.95, 45.10, 1.74, 3.62, 13.36, 27.61, 129.02],
    ['新西兰', 10.51, 20.88, 46.10, 1.74, 3.54, 13.21, 27.70, 128.98],
    ['挪威', 10.55, 21.16, 46.71, 1.76, 3.62, 13.34, 27.69, 131.48],
    ['巴布亚新几内亚', 10.96, 21.78, 47.90, 1.90, 4.01, 14.72, 31.36, 148.22],
    ['菲律宾', 10.78, 21.64, 46.24, 1.81, 3.83, 14.74, 30.64, 145.27],
    ['波兰', 10.16, 20.24, 45.36, 1.76, 3.60, 13.29, 27.89, 131.58],
    ['葡萄牙', 10.53, 21.17, 46.70, 1.79, 3.62, 13.13, 27.38, 128.65],
    ['罗马尼亚', 10.41, 20.98, 45.87, 1.76, 3.64, 13.25, 27.67, 132.50],
    ['新加坡', 10.38, 21.28, 47.40, 1.88, 3.89, 15.11, 31.32, 157.77],
    ['西班牙', 10.42, 20.77, 45.98, 1.76, 3.55, 13.31, 27.73, 131.57],
    ['瑞士', 10.25, 20.61, 45.63, 1.77, 3.61, 13.29, 27.94, 130.63],
    ['瑞典', 10.37, 20.46, 45.78, 1.78, 3.55, 13.22, 27.91, 131.20],
    ['中国台北', 10.59, 21.29, 46.80, 1.79, 3.77, 14.07, 30.07, 139.27],
    ['泰国', 10.39, 21.09, 47.91, 1.83, 3.84, 15.23, 32.56, 149.90],
    ['土耳其', 10.71, 21.43, 47.60, 1.79, 3.67, 13.56, 28.58, 131.50],
    ['美国', 9.93, 19.75, 43.86, 1.73, 3.53, 13.20, 27.43, 127.43],  # 补全数据
]

columns = ['国家和地区', '100米（秒）', '200米（秒）', '400米（秒）', '800米（分）', '1500米（分）', '5000米（分）', '10000米（分）', '马拉松（分）']
df = pd.DataFrame(data, columns=columns)
df.set_index('国家和地区', inplace=True)

# 标准化
scaler = StandardScaler()
data_scaled = scaler.fit_transform(df)

# 层次聚类并绘制树状图
methods = ['average', 'ward', 'centroid']
titles = ['类平均法', '离差平方和法', '均值法（重心法）']

plt.figure(figsize=(15, 20))
for i, method in enumerate(methods, 1):
    plt.subplot(3, 1, i)
    Z = linkage(data_scaled, method=method)
    dendrogram(Z, labels=df.index, orientation='left', leaf_font_size=8)
    plt.title(titles[i-1])

plt.tight_layout()
plt.show()